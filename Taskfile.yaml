version: "3"

tasks:
  setup:
    desc: Install dependencies (from lock file)
    cmds:
      - uv venv
      - uv pip sync pyproject.toml
    silent: true

  add:
    desc: Add a new dependency (and update lock file)
    cmds:
      - uv pip install {{.CLI_ARGS}}
      - uv pip compile --output-file requirements.lock pyproject.toml

  lint:
    desc: Run Ruff for linting
    cmds:
      - uv pip run ruff check .

  typecheck:
    desc: Run Mypy for type checking
    cmds:
      - uv pip run mypy .

  test:
    desc: Run tests with pytest
    cmds:
      - uv pip run pytest

  ci:
    desc: Run all CI checks
    cmds:
      - task: lint
      - task: typecheck
      - task: test

  reset_db:
    desc: "Reset the database (drop, create, and seed)"
    cmds:
      - echo "Dropping the database if it exists..."
      - psql -U postgres -c "DROP DATABASE IF EXISTS papers_development;"
      - echo "Creating the database..."
      - psql -U postgres -c "CREATE DATABASE papers_development;"
      - echo "Running setup_db management command to seed the database..."
      - uv run python manage.py setup_db
    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432
